<div class="px-5 bg-white text-slate-700 ">
	<div class="grid divide-y divide-neutral-200">
		<div class="py-2">
			<details class="group">
				<summary class="flex justify-between items-center font-medium cursor-pointer list-none">
					<span>
						Debugging ?</span>
					<span class="transition group-open:rotate-180">
						<svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewbox="0 0 24 24" width="24">
							<path d="M6 9l6 6 6-6"></path>
						</svg>
					</span>
				</summary>
				<p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
					<pre dir="ltr" id="output" class="break-all whitespace-pre-wrap">{{ _self.dumpContext(_context|json_encode|raw) }}</pre>
				</p>
			</details>
		</div>
	</div>
</div>
{% macro dumpContext(context) %}
  {%- for key, value in context -%}
    {%- if value is iterable and not value is string -%}
      <strong>{{ key }}</strong>: <br>
      {{ _self.dumpContext(value) }}
    {%- else -%}
      <strong>{{ key }}</strong>: {{ value|json_encode|raw }}<br>
    {%- endif -%}
  {%- endfor -%}
{% endmacro %}
<script>
// populate the output div with the context data
;
var output = {{ _self.dumpContext(_context|json_encode|raw) }};
console.log(output);
// now take the output, format it, syntax highlight it, and insert it into the output div
var formatted = JSON.stringify(output, null, 4);
// create a function to syntax highlight the JSON
function syntaxHighlight(json) {
  if (!json) return ""; //no JSON from response

  json = json
    .replace(/&/g, "&amp;")
    .replace(/</g, "&lt;")
    .replace(/>/g, "&gt;");
  return json.replace(
    /("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,
    function (match) {
      var cls = "number";
      if (/^"/.test(match)) {
        if (/:$/.test(match)) {
          cls = "key";
        } else {
          cls = "string";
        }
      } else if (/true|false/.test(match)) {
        cls = "boolean";
      } else if (/null/.test(match)) {
        cls = "null";
      }
      return '<span class="' + cls + '">' + match + "</span>";
    }
  );
}
// call the syntax highlighting function
var highlighted = syntaxHighlight(formatted);
// insert the highlighted JSON into the output div

document.getElementById('output').innerHTML = highlighted;

</script>